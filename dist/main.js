(()=>{"use strict";const e=({title:t,desc:n,notes:s,dueDate:c,priority:d,checkList:a,resolved:i})=>({title:t,desc:n,notes:s,dueDate:c,priority:d,checkList:a,resolved:i,copy:()=>{const c=a.map((e=>[e[0],e[1]]));return e({title:t,desc:n,notes:s,dueDate:"bad for now",priority:d,checkList:c,resolved:i})}}),t=(t,n)=>({name:t,taskList:n,addTask:()=>{const t=e({title:"New Task",desc:"A blank task",notes:"blank notes",dueDate:"set this somehow",priority:"none",checkList:[["sample checkbox",!0]],resolved:!1});n.push(t)},deleteTask:e=>{for(let t=0;t<n.length;t++)if(n[t]===e){n.splice(t,1);break}}});let n;const s="Odin-Todo",c=()=>{localStorage.setItem(s,JSON.stringify(n))},d=()=>{const e=t("New Project",[]);e.addTask(),n.push(e),c()},a=(e,t)=>{e.innerHTML="";const n=document.createElement("div");n.setAttribute("id","project-info"),e.appendChild(n);const s=document.createElement("button");s.innerText="Back to Home",s.classList.add("back-button"),n.appendChild(s),s.addEventListener("click",(()=>{p(e)}));const d=document.createElement("h1");d.innerText=t.name,n.appendChild(d);const o=document.createElement("button");o.innerText="Rename Project",o.classList.add("project-rename"),n.appendChild(o),o.addEventListener("click",(()=>{const e=prompt("New project name?");e&&(t.name=e,d.innerText=e,c())}));const l=document.createElement("button");l.innerText="Create New Task",l.classList.add("create-button"),e.appendChild(l),l.addEventListener("click",(()=>{t.addTask(),c(),a(e,t)}));const r=document.createElement("ul");r.setAttribute("id","task-list"),e.appendChild(r);const m=t.taskList,u={content:e,project:t};m.forEach((e=>{const t=document.createElement("li");r.appendChild(t),i(e,t,u)})),e.appendChild(r)},i=(e,t,n)=>{const s=o(e,t),c=document.createElement("button");return c.classList.add("mini-task-expand"),c.innerText=">",s.append(c),c.addEventListener("click",(()=>{t.innerHTML="",l(e,t,n)})),s},o=(e,t,n)=>{const s=document.createElement("div");s.classList.add("mini-task"),t.append(s);const c=document.createElement("div");c.classList.add("mini-task-title"),c.innerText=e.title,s.append(c);const d=document.createElement("div");return d.classList.add("mini-task-date"),d.innerText=e.dueDate,s.append(d),e.resolved?s.classList.add(r("none")):s.classList.add(r(e.priority)),s},l=(e,t,n)=>{const s=document.createElement("div");s.classList.add("full-task"),t.append(s);const d=o(e,s),r=document.createElement("button");r.classList.add("mini-task-expand"),r.innerText="^",d.append(r),r.addEventListener("click",(()=>{t.innerHTML="",i(e,t)}));const p=document.createElement("div");p.classList.add("full-task-details"),t.append(p);const m=document.createElement("div");m.classList.add("full-task-text"),m.innerText=e.desc,p.append(m);const u=document.createElement("div");u.classList.add("full-task-text"),u.innerText=e.notes,p.append(u);const k=document.createElement("div");k.classList.add("full-task-text"),e.resolved?k.innerText="Priority: none (resolved)":k.innerText=`Priority: ${e.priority}`,p.append(k);const L=document.createElement("ul");L.classList.add("full-task-list"),p.append(L),e.checkList.forEach((e=>{const t=document.createElement("li");t.classList.add("full-task-list-item"),L.append(t);const n=document.createElement("input");n.setAttribute("type","checkbox"),t.append(n);const s=document.createElement("p");s.innerText=e[0],t.append(s)}));const E=document.createElement("div");E.classList.add("full-task-button-row"),p.append(E);const T=document.createElement("button");T.classList.add("full-task-edit"),T.innerText="Edit Task",E.append(T),T.addEventListener("click",(()=>{e.copy(),((e,t,n,s)=>{e.innerHTML="";const c=document.createElement("div");c.setAttribute("id","project-info"),e.appendChild(c);const d=document.createElement("button");d.innerText="Back to Project",d.classList.add("back-button"),c.appendChild(d),d.addEventListener("click",(()=>{a(e,t)}));const i=document.createElement("h1");i.innerText="Edit Task",c.appendChild(i)})(n.content,n.project)}));const h=document.createElement("button");h.classList.add("full-task-delete"),h.innerText="Delete Task",E.append(h),h.addEventListener("click",(()=>{t.remove(),n.project.deleteTask(e),c()}));const v=document.createElement("button");return v.classList.add("full-task-resolve"),v.innerText="Resolve Task",E.append(v),v.addEventListener("click",(()=>{e.resolved=!0,t.innerHTML="",l(e,t,n),c()})),s},r=e=>{switch(e){case"high":return"high-priority";case"medium":return"medium-priority";case"low":return"low-priority";default:return"no-priority"}},p=e=>{e.innerHTML="";const t=document.createElement("h1");t.innerText="TODO Lists",e.appendChild(t);const i=document.createElement("button");i.innerText="Create New Project",i.classList.add("create-button"),e.appendChild(i),i.addEventListener("click",(()=>{d(),p(e)}));const o=document.createElement("ul");o.setAttribute("id","project-list"),e.appendChild(o),n.forEach((t=>{const s=document.createElement("li");s.classList.add("project");const d=document.createElement("div");d.classList.add("project-title"),d.innerText=t.name,s.append(d);const i=document.createElement("div");i.classList.add("project-counter"),i.innerText=`${t.taskList.length} todos`,s.append(i);const l=document.createElement("button");l.classList.add("project-view"),l.innerText="View",s.append(l),l.addEventListener("click",(()=>{a(e,t)}));const r=document.createElement("button");r.classList.add("project-delete"),r.innerText="Delete",s.append(r),r.addEventListener("click",(()=>{(e=>{n=n.filter((t=>t!==e)),c()})(t),p(e)})),o.appendChild(s)})),e.appendChild(o);const l=document.createElement("button");l.classList.add("home-reset"),l.innerText="Reset all",e.append(l),l.addEventListener("click",(()=>{n=[],localStorage.setItem(s,JSON.stringify(null)),d(),p(e)}))};console.log("webpack compiled to main.js");const m=document.querySelector("#content");(()=>{const c=JSON.parse(localStorage.getItem(s));c&&0!==c.length?n=c.map((n=>(n=>{let s=n.taskList.map((t=>(t=>e(t))(t)));return t(n.name,s)})(n))):(console.log("initialize project list"),n=[],d()),console.table(n)})(),p(m),console.log("end of index")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvdGFza09iak1vZHVsZS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvcHJvamVjdE9iak1vZHVsZS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3RvcmFnZU1vZHVsZS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvcHJvamVjdFBhZ2VNb2R1bGUuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3Rhc2tQYWdlTW9kdWxlLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9ob21lUGFnZU1vZHVsZS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsidGFza0ZhY3RvcnkiLCJ0aXRsZSIsImRlc2MiLCJub3RlcyIsImR1ZURhdGUiLCJwcmlvcml0eSIsImNoZWNrTGlzdCIsInJlc29sdmVkIiwiY29weSIsImNDb3B5IiwibWFwIiwiZWxlbSIsInByb2plY3RGYWN0b3J5IiwibmFtZSIsInRhc2tMaXN0IiwiYWRkVGFzayIsIm5ld1Rhc2siLCJwdXNoIiwiZGVsZXRlVGFzayIsInQiLCJpIiwibGVuZ3RoIiwic3BsaWNlIiwicHJvamVjdExpc3QiLCJzdG9yYWdlTmFtZSIsInN0b3JlUHJvamVjdExpc3QiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwiSlNPTiIsInN0cmluZ2lmeSIsImNyZWF0ZU5ld1Byb2plY3QiLCJwIiwibG9hZFByb2plY3QiLCJjb250ZW50IiwicHJvamVjdCIsImlubmVySFRNTCIsInRvcENvbnRhaW5lciIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImFwcGVuZENoaWxkIiwiYmFja2VyIiwiaW5uZXJUZXh0IiwiY2xhc3NMaXN0IiwiYWRkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImxvYWRIb21lIiwiaDEiLCJwcm9qZWN0TmFtZXIiLCJpbnB1dCIsInByb21wdCIsImNyZWF0ZXIiLCJ1TGlzdCIsInBhcmVudEluZm8iLCJmb3JFYWNoIiwicm93IiwiY3JlYXRlTWluaVRhc2tQYW5lIiwidGFzayIsImlubmVySXRlbSIsIm1pbmlUYXNrQ29udGVudCIsImV4cGFuZGVyIiwiYXBwZW5kIiwiY3JlYXRlRnVsbFRhc2tQYW5lIiwidFRpdGxlIiwidERhdGUiLCJwcmlvcml0eUNvbG9yIiwibWluaSIsInNocmlua2VyIiwiZGV0YWlscyIsInByaW8iLCJjTGlzdCIsImMiLCJjaGVjayIsImNCb3giLCJjVGV4dCIsImJ1dHRvblJvdyIsImVkaXQiLCJ0YXNrQ29weSIsImxvYWRUYXNrIiwiZGVsQnV0dG9uIiwicmVtb3ZlIiwicmVzb2x2ZSIsIml0ZW0iLCJwVGl0bGUiLCJwVGFza3MiLCJwVmlldyIsInBEZWxldGUiLCJmaWx0ZXIiLCJkZWxldGVQcm9qZWN0IiwicmVzZXRlciIsImNvbnNvbGUiLCJsb2ciLCJxdWVyeVNlbGVjdG9yIiwibG9jYWxPYmoiLCJwYXJzZSIsImdldEl0ZW0iLCJvYmoiLCJ0YXNrRnJvbU9iamVjdCIsInByb2plY3RGcm9tT2JqZWN0IiwidGFibGUiLCJsb2FkUHJvamVjdExpc3QiXSwibWFwcGluZ3MiOiJtQkFHQSxNQUFNQSxFQUFjLEVBQUVDLFFBQ2xCQyxPQUNBQyxRQUNBQyxVQUNBQyxXQUNBQyxZQUNBQyxlQTZCTyxDQUFDTixRQUFPQyxPQUFNQyxRQUFPQyxVQUFTQyxXQUFVQyxZQUFXQyxXQUFVQyxLQXBCdkQsS0FFVCxNQUFNQyxFQUFRSCxFQUFVSSxLQUFLQyxHQUVsQixDQUFDQSxFQUFLLEdBQUlBLEVBQUssTUFhMUIsT0FWZ0JYLEVBQVksQ0FDeEJDLE1BQU9BLEVBQ1BDLEtBQU1BLEVBQ05DLE1BQU9BLEVBQ1BDLFFBQVMsY0FDVEMsU0FBVUEsRUFDVkMsVUFBV0csRUFDWEYsU0FBVUEsT0M3QmhCSyxFQUFpQixDQUFDQyxFQUFNQyxLQTBCbkIsQ0FBQ0QsT0FBTUMsV0FBVUMsUUF4QlIsS0FDWixNQUFNQyxFQUFVaEIsRUFBWSxD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U3hFLE9BT3JCRSxFQUFjc0UsRUFBU25GLEtBQUlDLEdEYVQsQ0FBQ3FGLElBQ3ZCLElBQUlsRixFQUFXa0YsRUFBSWxGLFNBQVNKLEtBQUlDLEdEUWJxRixJQUNSaEcsRUFBWWdHLEdDVGVDLENBQWV0RixLQUdyRCxPQUZjQyxFQUFlb0YsRUFBSW5GLEtBQU1DLElDZkFvRixDQUFrQnZGLE1BTnJEK0UsUUFBUUMsSUFBSSwyQkFDWnBFLEVBQWMsR0FDZE8sS0FNSjRELFFBQVFTLE1BQU01RSxJSVZsQjZFLEdBRUF0RCxFQUFTYixHQUNUeUQsUUFBUUMsSUFBSSxpQiIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9jb25zdHJ1Y3RvciBhbmQgaGVscGVyIGZ1bmN0aW9ucyBmb3IgdGFzay90b2RvIG9iamVjdHNcbmltcG9ydCB7Zm9ybWF0fSBmcm9tICdkYXRlLWZucyc7XG5cbmNvbnN0IHRhc2tGYWN0b3J5ID0gKHt0aXRsZSxcbiAgICBkZXNjLFxuICAgIG5vdGVzLFxuICAgIGR1ZURhdGUsXG4gICAgcHJpb3JpdHksXG4gICAgY2hlY2tMaXN0LFxuICAgIHJlc29sdmVkfSkgPT57XG4gICAgLypjb25zdCB0aXRsZSA9ICdOZXcgVGFzayc7XG4gICAgY29uc3QgZGVzYyA9ICdBIGRlZmF1bHQgdGFzayB0ZW1wbGF0ZSc7XG4gICAgY29uc3Qgbm90ZXMgPSAnYmxhbmsgbm90ZXMnO1xuICAgIGNvbnN0IGR1ZURhdGUgPSAnc2V0IHRoaXMgc29tZWhvdyc7XG4gICAgY29uc3QgcHJpb3JpdHkgPSAwO1xuICAgIGNvbnN0IGNoZWNrbGlzdCA9IG51bGw7XG4gICAgY29uc3QgcmVzb2x2ZWQgPSBmYWxzZTsqL1xuXG4gICAgY29uc3QgY29weSA9ICgpID0+e1xuXG4gICAgICAgIGNvbnN0IGNDb3B5ID0gY2hlY2tMaXN0Lm1hcCgoZWxlbSk9PlxuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gW2VsZW1bMF0sIGVsZW1bMV1dO1xuICAgICAgICB9KVxuXG4gICAgICAgIGNvbnN0IG5ld1Rhc2sgPSB0YXNrRmFjdG9yeSh7XG4gICAgICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgICAgICBkZXNjOiBkZXNjLFxuICAgICAgICAgICAgbm90ZXM6IG5vdGVzLFxuICAgICAgICAgICAgZHVlRGF0ZTogJ2JhZCBmb3Igbm93JyxcbiAgICAgICAgICAgIHByaW9yaXR5OiBwcmlvcml0eSxcbiAgICAgICAgICAgIGNoZWNrTGlzdDogY0NvcHksXG4gICAgICAgICAgICByZXNvbHZlZDogcmVzb2x2ZWQsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBuZXdUYXNrO1xuICAgIH1cblxuICAgIHJldHVybiB7dGl0bGUsIGRlc2MsIG5vdGVzLCBkdWVEYXRlLCBwcmlvcml0eSwgY2hlY2tMaXN0LCByZXNvbHZlZCwgY29weX07XG59XG5cbi8vY29udmVydCBhIGdlbmVyaWMgb2JqZWN0IHRvIGEgdGFza1xuY29uc3QgdGFza0Zyb21PYmplY3QgPSBvYmogPT57XG4gICAgbGV0IHRhc2sgPSB0YXNrRmFjdG9yeShvYmopO1xuICAgIHJldHVybiB0YXNrO1xufVxuXG5leHBvcnQge3Rhc2tGYWN0b3J5LCB0YXNrRnJvbU9iamVjdH07IiwiaW1wb3J0IHsgdGFza0ZhY3RvcnksIHRhc2tGcm9tT2JqZWN0IH0gZnJvbSBcIi4vdGFza09iak1vZHVsZVwiO1xuXG4vL2NvbnN0cnVjdG9yIGFuZCBoZWxwZXIgZnVuY3Rpb25zIGZvciBwcm9qZWN0IG9iamVjdHNcbmNvbnN0IHByb2plY3RGYWN0b3J5ID0gKG5hbWUsIHRhc2tMaXN0KSA9PntcblxuICAgIGNvbnN0IGFkZFRhc2sgPSAoKT0+e1xuICAgICAgICBjb25zdCBuZXdUYXNrID0gdGFza0ZhY3Rvcnkoe1xuICAgICAgICAgICAgdGl0bGU6ICdOZXcgVGFzaycsIFxuICAgICAgICAgICAgZGVzYzogJ0EgYmxhbmsgdGFzaycsIFxuICAgICAgICAgICAgbm90ZXM6ICdibGFuayBub3RlcycsIFxuICAgICAgICAgICAgZHVlRGF0ZTogJ3NldCB0aGlzIHNvbWVob3cnLCBcbiAgICAgICAgICAgIHByaW9yaXR5OiAnbm9uZScsIFxuICAgICAgICAgICAgY2hlY2tMaXN0OiBbWydzYW1wbGUgY2hlY2tib3gnLCB0cnVlXV0sIFxuICAgICAgICAgICAgcmVzb2x2ZWQ6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgICAgICB0YXNrTGlzdC5wdXNoKG5ld1Rhc2spO1xuICAgIH1cblxuICAgIC8vZGVsZXRlIGEgcHJvamVjdCBmcm9tIHRoZSBsaXN0XG4gICAgY29uc3QgZGVsZXRlVGFzayA9ICh0KSA9PntcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHRhc2tMaXN0Lmxlbmd0aDsgaSsrKVxuICAgICAgICB7XG4gICAgICAgICAgICBpZih0YXNrTGlzdFtpXSA9PT0gdCl7XG4gICAgICAgICAgICAgICAgdGFza0xpc3Quc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHtuYW1lLCB0YXNrTGlzdCwgYWRkVGFzaywgZGVsZXRlVGFza307XG59XG5cbi8vY29udmVydCBhIGdlbmVyaWMgb2JqZWN0IHRvIGEgcHJvamVjdFxuY29uc3QgcHJvamVjdEZyb21PYmplY3QgPSAob2JqKSA9PntcbiAgICBsZXQgdGFza0xpc3QgPSBvYmoudGFza0xpc3QubWFwKGVsZW09PnRhc2tGcm9tT2JqZWN0KGVsZW0pKTtcbiAgICBsZXQgcHJvamVjdCA9IHByb2plY3RGYWN0b3J5KG9iai5uYW1lLCB0YXNrTGlzdCk7XG5cbiAgICByZXR1cm4gcHJvamVjdDtcbn07XG5cbmV4cG9ydCB7cHJvamVjdEZhY3RvcnksIHByb2plY3RGcm9tT2JqZWN0fTsiLCJpbXBvcnQge3Byb2plY3RGYWN0b3J5LCBwcm9qZWN0RnJvbU9iamVjdH0gZnJvbSBcIi4vcHJvamVjdE9iak1vZHVsZVwiO1xuXG4vL2hvbGQgdGhlIHByb2plY3QgbGlzdCBhbmQgaGFuZGxlIGxvY2Fsc3RvcmFnZSBmdW5jdGlvbnNcbmxldCBwcm9qZWN0TGlzdDtcbmNvbnN0IHN0b3JhZ2VOYW1lID0gJ09kaW4tVG9kbyc7XG5cbi8vbG9hZCB0aGUgcHJvamVjdCBsaXN0IGZyb20gbG9jYWwgc3RvcmFnZVxuY29uc3QgbG9hZFByb2plY3RMaXN0ID0gKCkgPT57XG4gICAgLy90cnkgdG8gbG9hZCBmcm9tIHN0b3JhZ2VcbiAgICBjb25zdCBsb2NhbE9iaiA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oc3RvcmFnZU5hbWUpKTtcbiAgICAvL2NvbnNvbGUudGFibGUobG9jYWxPYmopO1xuXG4gICAgLy9pZiBubyByZXN1bHRzIGZvdW5kLCBjcmVhdGUgYSBkZWZhdWx0IG9uZVxuICAgIGlmKCFsb2NhbE9iaiB8fCBsb2NhbE9iai5sZW5ndGggPT09IDApe1xuICAgICAgICBjb25zb2xlLmxvZygnaW5pdGlhbGl6ZSBwcm9qZWN0IGxpc3QnKTtcbiAgICAgICAgcHJvamVjdExpc3QgPSBbXTtcbiAgICAgICAgY3JlYXRlTmV3UHJvamVjdCgpO1xuICAgIH1cbiAgICAvL2xvYWQgZXhpc3RpbmcgcHJvamVjdCwgY29udmVydCBnZW5lcmljIG9iamVjdHMgdG8gcHJvamVjdHMvdGFza3MvY2hlY2tsaXN0c1xuICAgIGVsc2V7XG4gICAgICAgIHByb2plY3RMaXN0ID0gbG9jYWxPYmoubWFwKGVsZW0gPT4gcHJvamVjdEZyb21PYmplY3QoZWxlbSkpO1xuICAgIH1cbiAgICBjb25zb2xlLnRhYmxlKHByb2plY3RMaXN0KTtcbn1cblxuLy9zdG9yZSB0aGUgcHJvamVjdCBsaXN0IGluIGxvY2FsIHN0b3JhZ2VcbmNvbnN0IHN0b3JlUHJvamVjdExpc3QgPSAoKSA9PntcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShzdG9yYWdlTmFtZSwgSlNPTi5zdHJpbmdpZnkocHJvamVjdExpc3QpKTtcbiAgICAvL2NvbnNvbGUubG9nKHByb2plY3RMaXN0KTtcbn1cblxuLy9yZXNldCB0aGUgbG9jYWwgc3RvcmFnZVxuY29uc3QgcmVzZXRTdG9yYWdlID0gKCkgPT57XG4gICAgcHJvamVjdExpc3QgPSBbXTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShzdG9yYWdlTmFtZSwgSlNPTi5zdHJpbmdpZnkobnVsbCkpO1xufVxuXG4vL2xldCB0aGUgcHJvamVjdCBoYXZlIGFjY2VzcyB0byBwcm9qZWN0IGxpc3RcbmNvbnN0IGdldFByb2plY3RMaXN0ID0gKCkgPT57XG4gICAgcmV0dXJuIHByb2plY3RMaXN0O1xufVxuXG4vL2FkZCBhIGJsYW5rIHByb2plY3QgdG8gdGhlIGxpc3RcbmNvbnN0IGNyZWF0ZU5ld1Byb2plY3QgPSAoKSA9PntcbiAgICBjb25zdCBwID0gcHJvamVjdEZhY3RvcnkoXCJOZXcgUHJvamVjdFwiLCBbXSk7XG4gICAgcC5hZGRUYXNrKCk7XG4gICAgcHJvamVjdExpc3QucHVzaChwKTtcbiAgICBzdG9yZVByb2plY3RMaXN0KCk7XG59XG5cbi8vZGVsZXRlIGEgcHJvamVjdCBmcm9tIHRoZSBsaXN0XG5jb25zdCBkZWxldGVQcm9qZWN0ID0gKHApID0+e1xuICAgIHByb2plY3RMaXN0ID0gcHJvamVjdExpc3QuZmlsdGVyKChlbGVtKT0+IGVsZW0gIT09IHApO1xuICAgIHN0b3JlUHJvamVjdExpc3QoKTtcbn1cblxuZXhwb3J0IHtsb2FkUHJvamVjdExpc3QsIHN0b3JlUHJvamVjdExpc3QsIHJlc2V0U3RvcmFnZSwgZ2V0UHJvamVjdExpc3QsIGNyZWF0ZU5ld1Byb2plY3QsIGRlbGV0ZVByb2plY3R9O1xuIiwiaW1wb3J0IHsgbG9hZEhvbWUgfSBmcm9tIFwiLi9ob21lUGFnZU1vZHVsZVwiO1xuaW1wb3J0IHsgc3RvcmVQcm9qZWN0TGlzdCB9IGZyb20gXCIuL3N0b3JhZ2VNb2R1bGVcIjtcbmltcG9ydCB7IGxvYWRUYXNrIH0gZnJvbSBcIi4vdGFza1BhZ2VNb2R1bGVcIjtcblxuLy9tb2R1bGUgZm9yIGRpc3BsYXlpbmcgdGFza3Mgd2l0aGluIGEgcHJvamVjdFxuXG4vL3VzZSB0aGUgY3VycmVudCBwcm9qZWN0IHRvIGFzc2VtYmxlIGFuIGh0bWwgcGFnZVxuY29uc3QgbG9hZFByb2plY3QgPSAoY29udGVudCwgcHJvamVjdCkgPT57XG4gIGNvbnRlbnQuaW5uZXJIVE1MID0gJyc7XG5cbiAgLy90b3AgZWxlbWVudCBjb250YWluZXJcbiAgY29uc3QgdG9wQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHRvcENvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Byb2plY3QtaW5mbycpO1xuICBjb250ZW50LmFwcGVuZENoaWxkKHRvcENvbnRhaW5lcik7XG5cbiAgLy9iYWNrIGJ1dHRvblxuICBjb25zdCBiYWNrZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgYmFja2VyLmlubmVyVGV4dCA9ICdCYWNrIHRvIEhvbWUnO1xuICBiYWNrZXIuY2xhc3NMaXN0LmFkZCgnYmFjay1idXR0b24nKTtcbiAgdG9wQ29udGFpbmVyLmFwcGVuZENoaWxkKGJhY2tlcik7XG4gIGJhY2tlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+e1xuICAgIGxvYWRIb21lKGNvbnRlbnQpO1xuICB9KVxuXG4gIC8vaDFcbiAgY29uc3QgaDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMScpO1xuICBoMS5pbm5lclRleHQgPSBwcm9qZWN0Lm5hbWU7XG4gIHRvcENvbnRhaW5lci5hcHBlbmRDaGlsZChoMSk7XG5cbiAgLy9yZW5hbWUgYnV0dG9uXG4gIGNvbnN0IHByb2plY3ROYW1lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBwcm9qZWN0TmFtZXIuaW5uZXJUZXh0ID0gJ1JlbmFtZSBQcm9qZWN0JztcbiAgcHJvamVjdE5hbWVyLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QtcmVuYW1lJyk7XG4gIHRvcENvbnRhaW5lci5hcHBlbmRDaGlsZChwcm9qZWN0TmFtZXIpO1xuICBcbiAgcHJvamVjdE5hbWVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcbiAgICBjb25zdCBpbnB1dCA9IHByb21wdCgnTmV3IHByb2plY3QgbmFtZT8nKTtcbiAgICBpZihpbnB1dCl7XG4gICAgICBwcm9qZWN0Lm5hbWUgPSBpbnB1dDtcbiAgICAgIGgxLmlubmVyVGV4dCA9IGlucHV0O1xuICAgICAgc3RvcmVQcm9qZWN0TGlzdCgpO1xuICAgIH1cbiAgfSk7XG5cblxuICAvL2NyZWF0ZSBidXR0b25cbiAgY29uc3QgY3JlYXRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBjcmVhdGVyLmlubmVyVGV4dCA9ICdDcmVhdGUgTmV3IFRhc2snO1xuICBjcmVhdGVyLmNsYXNzTGlzdC5hZGQoJ2NyZWF0ZS1idXR0b24nKTtcbiAgY29udGVudC5hcHBlbmRDaGlsZChjcmVhdGVyKTtcbiAgY3JlYXRlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XG4gICAgcHJvamVjdC5hZGRUYXNrKCk7XG4gICAgc3RvcmVQcm9qZWN0TGlzdCgpO1xuICAgIGxvYWRQcm9qZWN0KGNvbnRlbnQsIHByb2plY3QpO1xuICB9KTtcblxuICAvL3VsXG4gIGNvbnN0IHVMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgdUxpc3Quc2V0QXR0cmlidXRlKCdpZCcsICd0YXNrLWxpc3QnKTtcbiAgY29udGVudC5hcHBlbmRDaGlsZCh1TGlzdCk7XG5cbiAgLy9saSBlbGVtZW50c1xuICBjb25zdCB0YXNrTGlzdCA9IHByb2plY3QudGFza0xpc3Q7XG4gIGNvbnN0IHBhcmVudEluZm8gPSB7Y29udGVudCwgcHJvamVjdH07XG4gIC8vY29uc29sZS5sb2cocHJvamVjdExpc3QpO1xuICB0YXNrTGlzdC5mb3JFYWNoKHQgPT4ge1xuICAgIC8vbGkgZWxlbWVudFxuICAgIGNvbnN0IHJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgdUxpc3QuYXBwZW5kQ2hpbGQocm93KTtcblxuICAgIC8vbWluaS1wYW5lXG4gICAgY3JlYXRlTWluaVRhc2tQYW5lKHQsIHJvdywgcGFyZW50SW5mbyk7XG4gIH0pO1xuXG4gIC8vYXBwZW5kIGxpc3QgdG8gY29udGVudFxuICBjb250ZW50LmFwcGVuZENoaWxkKHVMaXN0KTtcbn1cblxuY29uc3QgY3JlYXRlTWluaVRhc2tQYW5lID0gKHRhc2ssIGVsZW0sIHBhcmVudEluZm8pPT57XG4gIGNvbnN0IGlubmVySXRlbSA9IG1pbmlUYXNrQ29udGVudCh0YXNrLCBlbGVtKTtcblxuICAvL2V4cGFuZFxuICBjb25zdCBleHBhbmRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBleHBhbmRlci5jbGFzc0xpc3QuYWRkKCdtaW5pLXRhc2stZXhwYW5kJyk7XG4gIGV4cGFuZGVyLmlubmVyVGV4dCA9ICc+JztcbiAgaW5uZXJJdGVtLmFwcGVuZChleHBhbmRlcik7XG4gIGV4cGFuZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcbiAgICBlbGVtLmlubmVySFRNTCA9ICcnO1xuICAgIGNyZWF0ZUZ1bGxUYXNrUGFuZSh0YXNrLCBlbGVtLCBwYXJlbnRJbmZvKTtcbiAgfSk7XG5cbiAgcmV0dXJuIGlubmVySXRlbTtcbn07XG5cbmNvbnN0IG1pbmlUYXNrQ29udGVudCA9ICh0YXNrLCBlbGVtLCBwYXJlbnRJbmZvKSA9PiB7XG4gIGNvbnN0IGlubmVySXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBpbm5lckl0ZW0uY2xhc3NMaXN0LmFkZCgnbWluaS10YXNrJyk7XG4gIGVsZW0uYXBwZW5kKGlubmVySXRlbSk7XG5cbiAgLy90aXRsZVxuICBjb25zdCB0VGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdFRpdGxlLmNsYXNzTGlzdC5hZGQoJ21pbmktdGFzay10aXRsZScpO1xuICB0VGl0bGUuaW5uZXJUZXh0ID0gdGFzay50aXRsZTtcbiAgaW5uZXJJdGVtLmFwcGVuZCh0VGl0bGUpO1xuXG4gIC8vZHVlIGRhdGVcbiAgY29uc3QgdERhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdERhdGUuY2xhc3NMaXN0LmFkZCgnbWluaS10YXNrLWRhdGUnKTtcbiAgdERhdGUuaW5uZXJUZXh0ID0gdGFzay5kdWVEYXRlO1xuICBpbm5lckl0ZW0uYXBwZW5kKHREYXRlKTtcblxuICAvL3NldCBwcmlvcml0eSBjb2xvclxuICBpZih0YXNrLnJlc29sdmVkKVxuICAgIGlubmVySXRlbS5jbGFzc0xpc3QuYWRkKHByaW9yaXR5Q29sb3IoJ25vbmUnKSk7XG4gIGVsc2VcbiAgICBpbm5lckl0ZW0uY2xhc3NMaXN0LmFkZChwcmlvcml0eUNvbG9yKHRhc2sucHJpb3JpdHkpKTtcblxuICByZXR1cm4gaW5uZXJJdGVtO1xufTtcblxuY29uc3QgY3JlYXRlRnVsbFRhc2tQYW5lID0gKHRhc2ssIGVsZW0sIHBhcmVudEluZm8pPT57XG4gIGNvbnN0IGlubmVySXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBpbm5lckl0ZW0uY2xhc3NMaXN0LmFkZCgnZnVsbC10YXNrJyk7XG4gIGVsZW0uYXBwZW5kKGlubmVySXRlbSk7XG5cbiAgLy9jb3B5IHRoZSBjb250ZW50IG9mIHRoZSBtaW5pLXRhc2sgYmFyXG4gIGNvbnN0IG1pbmkgPSBtaW5pVGFza0NvbnRlbnQodGFzaywgaW5uZXJJdGVtKTtcblxuICAvL3Nocmlua1xuICBjb25zdCBzaHJpbmtlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBzaHJpbmtlci5jbGFzc0xpc3QuYWRkKCdtaW5pLXRhc2stZXhwYW5kJyk7XG4gIHNocmlua2VyLmlubmVyVGV4dCA9ICdeJztcbiAgbWluaS5hcHBlbmQoc2hyaW5rZXIpO1xuICBzaHJpbmtlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XG4gICAgZWxlbS5pbm5lckhUTUwgPSAnJztcbiAgICBjcmVhdGVNaW5pVGFza1BhbmUodGFzaywgZWxlbSk7XG4gIH0pO1xuXG4gIC8vZXhwYW5kZWQgZGV0YWlsc1xuICBjb25zdCBkZXRhaWxzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRldGFpbHMuY2xhc3NMaXN0LmFkZCgnZnVsbC10YXNrLWRldGFpbHMnKTtcbiAgZWxlbS5hcHBlbmQoZGV0YWlscyk7XG5cbiAgLy9kZXNjcmlwdGlvblxuICBjb25zdCBkZXNjID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRlc2MuY2xhc3NMaXN0LmFkZCgnZnVsbC10YXNrLXRleHQnKTtcbiAgZGVzYy5pbm5lclRleHQgPSB0YXNrLmRlc2M7XG4gIGRldGFpbHMuYXBwZW5kKGRlc2MpO1xuXG4gIC8vbm90ZXNcbiAgY29uc3Qgbm90ZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgbm90ZXMuY2xhc3NMaXN0LmFkZCgnZnVsbC10YXNrLXRleHQnKTtcbiAgbm90ZXMuaW5uZXJUZXh0ID0gdGFzay5ub3RlcztcbiAgZGV0YWlscy5hcHBlbmQobm90ZXMpO1xuXG4gIC8vcHJpb3JpdHlcbiAgY29uc3QgcHJpbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBwcmlvLmNsYXNzTGlzdC5hZGQoJ2Z1bGwtdGFzay10ZXh0Jyk7XG4gIGlmKHRhc2sucmVzb2x2ZWQpXG4gICAgcHJpby5pbm5lclRleHQgPSBgUHJpb3JpdHk6IG5vbmUgKHJlc29sdmVkKWA7XG4gIGVsc2VcbiAgICBwcmlvLmlubmVyVGV4dCA9IGBQcmlvcml0eTogJHt0YXNrLnByaW9yaXR5fWA7XG4gIGRldGFpbHMuYXBwZW5kKHByaW8pO1xuXG4gIC8vY2hlY2tsaXN0XG4gIGNvbnN0IGNMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgY0xpc3QuY2xhc3NMaXN0LmFkZCgnZnVsbC10YXNrLWxpc3QnKTtcbiAgZGV0YWlscy5hcHBlbmQoY0xpc3QpO1xuXG4gIHRhc2suY2hlY2tMaXN0LmZvckVhY2goYz0+e1xuICAgIC8vb3V0ZXIgY29udGFpbmVyXG4gICAgY29uc3QgY2hlY2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICAgIGNoZWNrLmNsYXNzTGlzdC5hZGQoJ2Z1bGwtdGFzay1saXN0LWl0ZW0nKTtcbiAgICBjTGlzdC5hcHBlbmQoY2hlY2spO1xuXG4gICAgLy9jaGVja2JveFxuICAgIGNvbnN0IGNCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIGNCb3guc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NoZWNrYm94Jyk7XG4gICAgY2hlY2suYXBwZW5kKGNCb3gpO1xuICAgIC8vdG9kbzogYWRkIGFuIGV2ZW50IHdoZW4gdG9nZ2xlZFxuICAgIC8vdXBkYXRlIHVpIGFuZCBzYXZlLCBidXQgZG8gbm90IHJlZnJlc2ggd2hvbGUgcGFnZVxuXG4gICAgLy90ZXh0IGZvciBjaGVja2JveFxuICAgIGNvbnN0IGNUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgIGNUZXh0LmlubmVyVGV4dCA9IGNbMF07XG4gICAgY2hlY2suYXBwZW5kKGNUZXh0KTtcbiAgfSk7XG5cbiAgLy9idXR0b25zXG4gIGNvbnN0IGJ1dHRvblJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBidXR0b25Sb3cuY2xhc3NMaXN0LmFkZCgnZnVsbC10YXNrLWJ1dHRvbi1yb3cnKTtcbiAgZGV0YWlscy5hcHBlbmQoYnV0dG9uUm93KTtcblxuICAvL2VkaXQgYnV0dG9uXG4gIGNvbnN0IGVkaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgZWRpdC5jbGFzc0xpc3QuYWRkKCdmdWxsLXRhc2stZWRpdCcpO1xuICBlZGl0LmlubmVyVGV4dCA9ICdFZGl0IFRhc2snO1xuICBidXR0b25Sb3cuYXBwZW5kKGVkaXQpO1xuICAvL3RvZG86IGFkZCBjbGljayBldmVudCwgZ28gdG8gZWRpdCBwYWdlXG4gIGVkaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PntcbiAgICAvL2NvcHkgdGhlIHRhc2tcbiAgICBjb25zdCB0YXNrQ29weSA9IHRhc2suY29weSgpO1xuICAgIGxvYWRUYXNrKHBhcmVudEluZm8uY29udGVudCwgcGFyZW50SW5mby5wcm9qZWN0LCB0YXNrLCB0YXNrQ29weSk7XG4gIH0pO1xuXG4gIC8vZGVsZXRlIGJ1dHRvblxuICBjb25zdCBkZWxCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgZGVsQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2Z1bGwtdGFzay1kZWxldGUnKTtcbiAgZGVsQnV0dG9uLmlubmVyVGV4dCA9ICdEZWxldGUgVGFzayc7XG4gIGJ1dHRvblJvdy5hcHBlbmQoZGVsQnV0dG9uKTtcbiAgZGVsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT57XG4gICAgLy9jYW5ub3QgcmVmcmVzaCBiZWNhdXNlIG5vIHJlZmVyZW5jZSB0byB0aGUgcHJvamVjdCBoZXJlXG4gICAgZWxlbS5yZW1vdmUoKTtcbiAgICBwYXJlbnRJbmZvLnByb2plY3QuZGVsZXRlVGFzayh0YXNrKTtcbiAgICBzdG9yZVByb2plY3RMaXN0KCk7XG4gIH0pO1xuXG4gIC8vcmVzb2x2ZSBidXR0b25cbiAgY29uc3QgcmVzb2x2ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICByZXNvbHZlLmNsYXNzTGlzdC5hZGQoJ2Z1bGwtdGFzay1yZXNvbHZlJyk7XG4gIHJlc29sdmUuaW5uZXJUZXh0ID0gJ1Jlc29sdmUgVGFzayc7XG4gIGJ1dHRvblJvdy5hcHBlbmQocmVzb2x2ZSk7XG4gIHJlc29sdmUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PntcbiAgICAvL2Nhbm5vdCByZWZyZXNoIGJlY2F1c2Ugbm8gcmVmZXJlbmNlIHRvIHRoZSBwcm9qZWN0IGhlcmVcbiAgICB0YXNrLnJlc29sdmVkID0gdHJ1ZTtcbiAgICBlbGVtLmlubmVySFRNTCA9ICcnO1xuICAgIGNyZWF0ZUZ1bGxUYXNrUGFuZSh0YXNrLCBlbGVtLCBwYXJlbnRJbmZvKTtcbiAgICBzdG9yZVByb2plY3RMaXN0KCk7XG4gIH0pO1xuXG4gIHJldHVybiBpbm5lckl0ZW07XG59XG5cbmNvbnN0IHByaW9yaXR5Q29sb3IgPSAocHJpb3JpdHkpPT57XG4gIHN3aXRjaChwcmlvcml0eSl7XG4gICAgY2FzZSAnaGlnaCc6IFxuICAgICAgcmV0dXJuICdoaWdoLXByaW9yaXR5JztcbiAgICBjYXNlICdtZWRpdW0nOlxuICAgICAgcmV0dXJuICdtZWRpdW0tcHJpb3JpdHknO1xuICAgIGNhc2UgJ2xvdyc6XG4gICAgICByZXR1cm4gJ2xvdy1wcmlvcml0eSc7XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAnbm8tcHJpb3JpdHknO1xuICB9XG59XG5cbmV4cG9ydCB7bG9hZFByb2plY3R9OyIsImltcG9ydCB7IHN0b3JlUHJvamVjdExpc3QgfSBmcm9tIFwiLi9zdG9yYWdlTW9kdWxlXCI7XG5pbXBvcnQge2xvYWRQcm9qZWN0fSBmcm9tIFwiLi9wcm9qZWN0UGFnZU1vZHVsZS5qc1wiO1xuXG5jb25zdCBsb2FkVGFzayA9IChjb250ZW50LCBwcm9qZWN0LCB0YXNrLCB0YXNrQ29weSkgPT57XG4gICAgY29udGVudC5pbm5lckhUTUwgPSAnJztcblxuICAvL3RvcCBlbGVtZW50IGNvbnRhaW5lclxuICBjb25zdCB0b3BDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgdG9wQ29udGFpbmVyLnNldEF0dHJpYnV0ZSgnaWQnLCAncHJvamVjdC1pbmZvJyk7XG4gIGNvbnRlbnQuYXBwZW5kQ2hpbGQodG9wQ29udGFpbmVyKTtcblxuICAvL2JhY2sgYnV0dG9uXG4gIGNvbnN0IGJhY2tlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBiYWNrZXIuaW5uZXJUZXh0ID0gJ0JhY2sgdG8gUHJvamVjdCc7XG4gIGJhY2tlci5jbGFzc0xpc3QuYWRkKCdiYWNrLWJ1dHRvbicpO1xuICB0b3BDb250YWluZXIuYXBwZW5kQ2hpbGQoYmFja2VyKTtcbiAgYmFja2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT57XG4gICAgbG9hZFByb2plY3QoY29udGVudCwgcHJvamVjdCk7XG4gIH0pXG5cbiAgLy9oMVxuICBjb25zdCBoMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2gxJyk7XG4gIGgxLmlubmVyVGV4dCA9ICdFZGl0IFRhc2snO1xuICB0b3BDb250YWluZXIuYXBwZW5kQ2hpbGQoaDEpO1xufTtcblxuZXhwb3J0IHtsb2FkVGFza307IiwiaW1wb3J0IHsgcmVzZXRTdG9yYWdlLCBnZXRQcm9qZWN0TGlzdCwgY3JlYXRlTmV3UHJvamVjdCwgZGVsZXRlUHJvamVjdH0gZnJvbSBcIi4vc3RvcmFnZU1vZHVsZVwiO1xuaW1wb3J0IHsgbG9hZFByb2plY3QgfSBmcm9tIFwiLi9wcm9qZWN0UGFnZU1vZHVsZVwiO1xuXG4vL21vZHVsZSBmb3IgZGlzcGxheWluZyBwcm9qZWN0cyBvbiBhIG1haW4gcGFnZVxuXG4vL2dldCB0aGUgY3VycmVudCBwcm9qZWN0IGxpc3QgYW5kIGFzc2VtYmxlIGFuIGh0bWwgcGFnZVxuY29uc3QgbG9hZEhvbWUgPSBjb250ZW50ID0+e1xuICAgIGNvbnRlbnQuaW5uZXJIVE1MID0gJyc7XG5cbiAgICAvL2gxXG4gICAgY29uc3QgaDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMScpO1xuICAgIGgxLmlubmVyVGV4dCA9ICdUT0RPIExpc3RzJztcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKGgxKTtcblxuICAgIC8vYnV0dG9uXG4gICAgY29uc3QgY3JlYXRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGNyZWF0ZXIuaW5uZXJUZXh0ID0gJ0NyZWF0ZSBOZXcgUHJvamVjdCc7XG4gICAgY3JlYXRlci5jbGFzc0xpc3QuYWRkKCdjcmVhdGUtYnV0dG9uJyk7XG4gICAgY29udGVudC5hcHBlbmRDaGlsZChjcmVhdGVyKTtcbiAgICBjcmVhdGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcbiAgICAgIGNyZWF0ZU5ld1Byb2plY3QoKTtcbiAgICAgIGxvYWRIb21lKGNvbnRlbnQpO1xuICAgIH0pO1xuXG4gICAgLy91bFxuICAgIGNvbnN0IHVMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgICB1TGlzdC5zZXRBdHRyaWJ1dGUoJ2lkJywgJ3Byb2plY3QtbGlzdCcpO1xuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQodUxpc3QpO1xuXG4gICAgLy9saSBlbGVtZW50c1xuICAgIGNvbnN0IHByb2plY3RMaXN0ID0gZ2V0UHJvamVjdExpc3QoKTtcbiAgICAvL2NvbnNvbGUubG9nKHByb2plY3RMaXN0KTtcbiAgICBwcm9qZWN0TGlzdC5mb3JFYWNoKHAgPT4ge1xuICAgICAgLy9jb25zb2xlLmxvZyhwKTtcbiAgICAgIC8vbGkgZWxlbWVudFxuICAgICAgY29uc3QgaXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICBpdGVtLmNsYXNzTGlzdC5hZGQoJ3Byb2plY3QnKTtcblxuICAgICAgLy90aXRsZVxuICAgICAgY29uc3QgcFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICBwVGl0bGUuY2xhc3NMaXN0LmFkZCgncHJvamVjdC10aXRsZScpO1xuICAgICAgcFRpdGxlLmlubmVyVGV4dCA9IHAubmFtZTtcbiAgICAgIGl0ZW0uYXBwZW5kKHBUaXRsZSk7XG5cbiAgICAgIC8vdGFzayBjb3VudFxuICAgICAgY29uc3QgcFRhc2tzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICAgIHBUYXNrcy5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LWNvdW50ZXInKTtcbiAgICAgIHBUYXNrcy5pbm5lclRleHQgPSBgJHtwLnRhc2tMaXN0Lmxlbmd0aH0gdG9kb3NgO1xuICAgICAgaXRlbS5hcHBlbmQocFRhc2tzKTtcblxuICAgICAgLy92aWV3XG4gICAgICBjb25zdCBwVmlldyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpXG4gICAgICBwVmlldy5jbGFzc0xpc3QuYWRkKCdwcm9qZWN0LXZpZXcnKTtcbiAgICAgIHBWaWV3LmlubmVyVGV4dCA9ICdWaWV3JztcbiAgICAgIGl0ZW0uYXBwZW5kKHBWaWV3KTtcbiAgICAgIHBWaWV3LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcbiAgICAgICAgbG9hZFByb2plY3QoY29udGVudCwgcCk7XG4gICAgICB9KTtcblxuICAgICAgLy9kZWxldGUgXG4gICAgICBjb25zdCBwRGVsZXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJylcbiAgICAgIHBEZWxldGUuY2xhc3NMaXN0LmFkZCgncHJvamVjdC1kZWxldGUnKTtcbiAgICAgIHBEZWxldGUuaW5uZXJUZXh0ID0gJ0RlbGV0ZSc7XG4gICAgICBpdGVtLmFwcGVuZChwRGVsZXRlKTtcbiAgICAgIHBEZWxldGUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xuICAgICAgICBkZWxldGVQcm9qZWN0KHApO1xuICAgICAgICBsb2FkSG9tZShjb250ZW50KTtcbiAgICAgIH0pO1xuXG4gICAgICAvL2FwcGVuZCB0byBsaXN0XG4gICAgICB1TGlzdC5hcHBlbmRDaGlsZChpdGVtKTtcbiAgICB9KTtcblxuICAgIC8vYXBwZW5kIGxpc3QgdG8gY29udGVudFxuICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQodUxpc3QpO1xuXG4gICAgLy9hIHJlc2V0IGJ1dHRvblxuICAgIGNvbnN0IHJlc2V0ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKVxuICAgIHJlc2V0ZXIuY2xhc3NMaXN0LmFkZCgnaG9tZS1yZXNldCcpO1xuICAgIHJlc2V0ZXIuaW5uZXJUZXh0ID0gJ1Jlc2V0IGFsbCc7XG4gICAgY29udGVudC5hcHBlbmQocmVzZXRlcik7XG4gICAgcmVzZXRlci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpPT57XG4gICAgICByZXNldFN0b3JhZ2UoKTtcbiAgICAgIGNyZWF0ZU5ld1Byb2plY3QoKTtcbiAgICAgIGxvYWRIb21lKGNvbnRlbnQpO1xuICAgIH0pXG59XG5cbmV4cG9ydCB7bG9hZEhvbWV9OyIsImltcG9ydCB7bG9hZEhvbWV9IGZyb20gXCIuL2hvbWVQYWdlTW9kdWxlLmpzXCI7XG5pbXBvcnQge3Byb2plY3RGYWN0b3J5fSBmcm9tIFwiLi9wcm9qZWN0T2JqTW9kdWxlLmpzXCI7XG5pbXBvcnQge2xvYWRQcm9qZWN0fSBmcm9tIFwiLi9wcm9qZWN0UGFnZU1vZHVsZS5qc1wiO1xuaW1wb3J0IHt0YXNrRmFjdG9yeX0gZnJvbSBcIi4vdGFza09iak1vZHVsZVwiO1xuaW1wb3J0IHtsb2FkUHJvamVjdExpc3QsIHN0b3JlUHJvamVjdExpc3QsIHJlc2V0U3RvcmFnZX0gZnJvbSBcIi4vc3RvcmFnZU1vZHVsZVwiXG5cbi8vdGVzdCB0aGF0IHdlYnBhY2sgd29ya3NcbmNvbnNvbGUubG9nKCd3ZWJwYWNrIGNvbXBpbGVkIHRvIG1haW4uanMnKTtcblxuY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb250ZW50Jyk7XG5cbi8vcmVzZXRTdG9yYWdlKCk7IC8vdG9kbzogcmVtb3ZlIHRoaXMgcmVzZXRcbmxvYWRQcm9qZWN0TGlzdCgpO1xuXG5sb2FkSG9tZShjb250ZW50KTtcbmNvbnNvbGUubG9nKCdlbmQgb2YgaW5kZXgnKTtcblxuIl0sInNvdXJjZVJvb3QiOiIifQ==