(()=>{"use strict";const e=({title:t,desc:n,notes:c,dueDate:s,priority:a,checkList:d,resolved:i})=>({title:t,desc:n,notes:c,dueDate:s,priority:a,checkList:d,resolved:i,copy:()=>{const s=d.map((e=>[e[0],e[1]]));return e({title:t,desc:n,notes:c,dueDate:"bad for now",priority:a,checkList:s,resolved:i})}}),t=(t,n)=>({name:t,taskList:n,addTask:()=>{const t=e({title:"New Task",desc:"A blank task",notes:"blank notes",dueDate:"set this somehow",priority:"none",checkList:[["sample checkbox",!1]],resolved:!1});n.push(t)},deleteTask:e=>{for(let t=0;t<n.length;t++)if(n[t]===e){n.splice(t,1);break}}});let n;const c="Odin-Todo",s=()=>{localStorage.setItem(c,JSON.stringify(n))},a=()=>{const e=t("New Project",[]);e.addTask(),n.push(e),s()},d=(e,t)=>{e.innerHTML="";const n=document.createElement("div");n.setAttribute("id","project-info"),e.appendChild(n);const c=document.createElement("button");c.innerText="Back to Home",c.classList.add("back-button"),n.appendChild(c),c.addEventListener("click",(()=>{p(e)}));const a=document.createElement("h1");a.innerText=t.name,n.appendChild(a);const o=document.createElement("button");o.innerText="Rename Project",o.classList.add("project-rename"),n.appendChild(o),o.addEventListener("click",(()=>{const e=prompt("New project name?");e&&(t.name=e,a.innerText=e,s())}));const l=document.createElement("button");l.innerText="Create New Task",l.classList.add("create-button"),e.appendChild(l),l.addEventListener("click",(()=>{t.addTask(),s(),d(e,t)}));const r=document.createElement("ul");r.setAttribute("id","task-list"),e.appendChild(r);const m=t.taskList,u={content:e,project:t};m.forEach((e=>{const t=document.createElement("li");r.appendChild(t),i(e,t,u)})),e.appendChild(r)},i=(e,t,n)=>{const c=o(e,t),s=document.createElement("button");return s.classList.add("mini-task-expand"),s.innerText=">",c.append(s),s.addEventListener("click",(()=>{t.innerHTML="",l(e,t,n)})),c},o=(e,t,n)=>{const c=document.createElement("div");c.classList.add("mini-task"),t.append(c);const s=document.createElement("div");s.classList.add("mini-task-title"),s.innerText=e.title,c.append(s);const a=document.createElement("div");return a.classList.add("mini-task-date"),a.innerText=e.dueDate,c.append(a),e.resolved?c.classList.add(r("none")):c.classList.add(r(e.priority)),c},l=(e,t,n)=>{const c=document.createElement("div");c.classList.add("full-task"),t.append(c);const a=o(e,c),r=document.createElement("button");r.classList.add("mini-task-expand"),r.innerText="^",a.append(r),r.addEventListener("click",(()=>{t.innerHTML="",i(e,t)}));const p=document.createElement("div");p.classList.add("full-task-details"),t.append(p);const m=document.createElement("div");m.classList.add("full-task-text"),m.innerText=e.desc,p.append(m);const u=document.createElement("div");u.classList.add("full-task-text"),u.innerText=e.notes,p.append(u);const k=document.createElement("div");k.classList.add("full-task-text"),e.resolved?k.innerText="Priority: none (resolved)":k.innerText=`Priority: ${e.priority}`,p.append(k);const E=document.createElement("ul");E.classList.add("full-task-list"),p.append(E),e.checkList.forEach((e=>{const t=document.createElement("li");t.classList.add("full-task-list-item"),E.append(t);const n=document.createElement("input");n.setAttribute("type","checkbox"),t.append(n),e[1]&&n.toggleAttribute("checked"),t.addEventListener("click",(()=>{e[1]=!e[1],s()}));const c=document.createElement("p");c.innerText=e[0],t.append(c)}));const L=document.createElement("div");L.classList.add("full-task-button-row"),p.append(L);const T=document.createElement("button");T.classList.add("full-task-edit"),T.innerText="Edit Task",L.append(T),T.addEventListener("click",(()=>{const t=e.copy();((e,t,n,c)=>{e.innerHTML="";const a=document.createElement("div");a.setAttribute("id","task-header"),e.append(a);const i=document.createElement("button");i.innerText="Back to Project",i.classList.add("back-button"),a.append(i),i.addEventListener("click",(()=>{d(e,t)}));const o=document.createElement("h1");o.innerText="Edit Task",a.appendChild(o);const l=document.createElement("div");l.setAttribute("id","task-container"),e.append(l);const r=((e,t)=>{const n=document.createElement("div");e.append(n);const c=document.createElement("label");c.innerText=t,n.append(c);const s=document.createElement("input");return n.append(s),{label:c,input:s}})(l,"Title");r.input.setAttribute("value",c.title);const p=document.createElement("button");p.innerText="Save Task",e.append(p),p.addEventListener("click",(()=>{c.title=r.input.value,console.log(c.title),t.taskList=t.taskList.map((e=>e===n?c:e)),s(),d(e,t)}))})(n.content,n.project,e,t)}));const v=document.createElement("button");v.classList.add("full-task-delete"),v.innerText="Delete Task",L.append(v),v.addEventListener("click",(()=>{t.remove(),n.project.deleteTask(e),s()}));const h=document.createElement("button");return h.classList.add("full-task-resolve"),h.innerText="Toggle Resolved",L.append(h),h.addEventListener("click",(()=>{e.resolved=!e.resolved,t.innerHTML="",l(e,t,n),s()})),c},r=e=>{switch(e){case"high":return"high-priority";case"medium":return"medium-priority";case"low":return"low-priority";default:return"no-priority"}},p=e=>{e.innerHTML="";const t=document.createElement("h1");t.innerText="TODO Lists",e.appendChild(t);const i=document.createElement("button");i.innerText="Create New Project",i.classList.add("create-button"),e.appendChild(i),i.addEventListener("click",(()=>{a(),p(e)}));const o=document.createElement("ul");o.setAttribute("id","project-list"),e.appendChild(o),n.forEach((t=>{const c=document.createElement("li");c.classList.add("project");const a=document.createElement("div");a.classList.add("project-title"),a.innerText=t.name,c.append(a);const i=document.createElement("div");i.classList.add("project-counter"),i.innerText=`${t.taskList.length} todos`,c.append(i);const l=document.createElement("button");l.classList.add("project-view"),l.innerText="View",c.append(l),l.addEventListener("click",(()=>{d(e,t)}));const r=document.createElement("button");r.classList.add("project-delete"),r.innerText="Delete",c.append(r),r.addEventListener("click",(()=>{(e=>{n=n.filter((t=>t!==e)),s()})(t),p(e)})),o.appendChild(c)})),e.appendChild(o);const l=document.createElement("button");l.classList.add("home-reset"),l.innerText="Reset all",e.append(l),l.addEventListener("click",(()=>{n=[],localStorage.setItem(c,JSON.stringify(null)),a(),p(e)}))};console.log("webpack compiled to main.js");const m=document.querySelector("#content");(()=>{const s=JSON.parse(localStorage.getItem(c));s&&0!==s.length?n=s.map((n=>(n=>{let c=n.taskList.map((t=>(t=>e(t))(t)));return t(n.name,c)})(n))):(console.log("initialize project list"),n=[],a()),console.table(n)})(),p(m),console.log("end of index")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,